<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5" xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:oval-sc="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5" xmlns:ios-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#ios" xmlns:ios-sc="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#ios" xmlns:x-ios-routing="http://oval.mitre.org/XMLSchema/x-ios-routing" xmlns:sch="http://purl.oclc.org/dsdl/schematron" targetNamespace="http://oval.mitre.org/XMLSchema/x-ios-routing" elementFormDefault="qualified" version="5.11">
      <xsd:import namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5" schemaLocation="oval-definitions-schema.xsd"/>
      <xsd:import namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5" schemaLocation="oval-system-characteristics-schema.xsd"/>
      <xsd:annotation>
            <xsd:documentation>The following is a proposal for the experimental ios-def:router_test, ios-def:routint_protocol_test, ios-def:bgp_neighbor_test, ios-sc:router_item, ios-sc:bgp_neighnor_item and ios-sc:routing_protocol_item that will support checking the output lines of routing protocol configurations on Cisco IOS devices.</xsd:documentation>
            <xsd:documentation>Thanks to Omar Santos and Panos Kampanakis of Cisco for providing this test.</xsd:documentation>
            <xsd:appinfo>
                  <schema>Experimental Schema for the Cisco IOS Routing Tests</schema>
                  <version>5.11</version>
                  <date>7/25/2012 12:30:00 PM</date>
                  <terms_of_use>Copyright (c) 2002-2012, The MITRE Corporation. All rights reserved. The contents of this file are subject to the terms of the OVAL License located at http://oval.mitre.org/oval/about/termsofuse.html. See the OVAL License for the specific language governing permissions and limitations for use of this schema. When distributing copies of the OVAL Schema, this license header must be included.</terms_of_use>
                  <sch:ns prefix="oval-def" uri="http://oval.mitre.org/XMLSchema/oval-definitions-5"/>
                  <sch:ns prefix="oval-sc" uri="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5"/>
                  <sch:ns prefix="ios-def" uri="http://oval.mitre.org/XMLSchema/oval-definitions-5#ios"/>
                  <sch:ns prefix="ios-sc" uri="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#ios"/>
                  <sch:ns prefix="x-ios-routing" uri="http://oval.mitre.org/XMLSchema/x-ios-routing"/>
                  <sch:ns prefix="xsi" uri="http://www.w3.org/2001/XMLSchema-instance"/>
            </xsd:appinfo>
      </xsd:annotation>
      <!-- =============================================================================== -->
      <!-- =========================  ROUTER TEST/OBJECT/STATE =========================== -->
      <!-- =============================================================================== -->
      <xsd:element name="router_test" substitutionGroup="oval-def:test">
            <xsd:annotation>
                  <xsd:documentation>The router test is used to check the properties of specific output lines from a router configurated instance in IOS.</xsd:documentation>
                  <xsd:appinfo>
                        <oval:element_mapping>
                              <oval:test>router_test</oval:test>
                              <oval:object>router_object</oval:object>
                              <oval:state>router_state</oval:state>
                              <oval:item target_namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#x-ios-routing">router_item</oval:item>
                        </oval:element_mapping>
                  </xsd:appinfo>
                  <xsd:appinfo>
                        <sch:pattern id="x-ios-routing_routertst">
                              <sch:rule context="x-ios-routing:router_test/x-ios-routing:object">
                                    <sch:assert test="@object_ref=ancestor::oval-def:oval_definitions/oval-def:objects/x-ios-routing:router_object/@id"><sch:value-of select="../@id"/> - the object child element of a router_test must reference a router_object</sch:assert>
                              </sch:rule>
                              <sch:rule context="x-ios-routing:router_test/x-ios-routing:state">
                                    <sch:assert test="@state_ref=ancestor::oval-def:oval_definitions/oval-def:states/x-ios-routing:router_state/@id"><sch:value-of select="../@id"/> - the state child element of a router_test must reference a router_state</sch:assert>
                              </sch:rule>
                        </sch:pattern>
                  </xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
                  <xsd:complexContent>
                        <xsd:extension base="oval-def:TestType">
                              <xsd:sequence>
                                    <xsd:element name="object" type="oval-def:ObjectRefType"/>
                                    <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
                              </xsd:sequence>
                        </xsd:extension>
                  </xsd:complexContent>
            </xsd:complexType>
      </xsd:element>
      <xsd:element name="router_object" substitutionGroup="oval-def:object">
            <xsd:annotation>
                  <xsd:documentation>The router_object element is used by a router test to define the object to be evaluated. Each object extends the standard ObjectType as defined in the oval-definitions-schema and one should refer to the ObjectType description for more information. The common set element allows complex objects to be created using filters and set logic. Again, please refer to the description of the set element in the oval-definitions-schema.</xsd:documentation>
                  <xsd:documentation>A router object consists of a router protocol and an instance entity.</xsd:documentation>
                  <xsd:appinfo>
                        <sch:pattern id="x-ios-routing_router_object_verify_filter_state">
                              <sch:rule context="x-ios-routing:router_object//oval-def:filter">
                                    <sch:let name="parent_object" value="ancestor::x-ios-routing:router_object"/>
                                    <sch:let name="parent_object_id" value="$parent_object/@id"/>
                                    <sch:let name="state_ref" value="."/>
                                    <sch:let name="reffed_state" value="ancestor::oval-def:oval_definitions/oval-def:states/*[@id=$state_ref]"/>
                                    <sch:let name="state_name" value="local-name($reffed_state)"/>
                                    <sch:let name="state_namespace" value="namespace-uri($reffed_state)"/>
                                    <sch:assert test="(($state_namespace='http://oval.mitre.org/XMLSchema/oval-definitions-5#x-ios-routing') and ($state_name='router_state'))">State referenced in filter for <sch:value-of select="name($parent_object)"/> '<sch:value-of select="$parent_object_id"/>' is of the wrong type.</sch:assert>
                              </sch:rule>
                        </sch:pattern>
                  </xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
                  <xsd:complexContent>
                        <xsd:extension base="oval-def:ObjectType">
                              <xsd:sequence>
                                    <xsd:choice>
                                          <xsd:element ref="oval-def:set"/>
                                          <xsd:sequence>
                                                <xsd:element name="protocol" type="x-ios-routing:EntityObjectRoutingProtocolType">
                                                      <xsd:annotation>
                                                            <xsd:documentation>The routing protocol of the router instance.</xsd:documentation>
                                                      </xsd:annotation>
                                                </xsd:element>
                                                <xsd:element name="id" type="oval-def:EntityObjectIntType">
                                                      <xsd:annotation>
                                                            <xsd:documentation>The IOS router id.</xsd:documentation>
                                                      </xsd:annotation>
                                                </xsd:element>
                                                <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                                          </xsd:sequence>
                                    </xsd:choice>
                              </xsd:sequence>
                        </xsd:extension>
                  </xsd:complexContent>
            </xsd:complexType>
      </xsd:element>
      <xsd:element name="router_state" substitutionGroup="oval-def:state">
            <xsd:annotation>
                  <xsd:documentation>The router_state element defines the different information that can be used to evaluate the result of a specific router command. This includes the protocol of the router instance, the id, the networks, bgp neighbor, ospf authentication area commands and the corresponding config lines. Please refer to the individual elements in the schema for more details about what each represents.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
                  <xsd:complexContent>
                        <xsd:extension base="oval-def:StateType">
                              <xsd:sequence>
                                    <xsd:element name="protocol" type="x-ios-routing:EntityStateRoutingProtocolType">
                                          <xsd:annotation>
                                                <xsd:documentation>The routing protocol of the router instance. If there are more than one router configurations, for example ospf instances, different objects should be created for each.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="id" type="oval-def:EntityStateIntType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>The IOS router id</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="network" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="unbounded">
                                          <xsd:annotation>
                                                <xsd:documentation>The subnet in the network command of the router instance. The area can be included in the string for OSPF.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="bgp_neighbor" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="unbounded">
                                          <xsd:annotation>
                                                <xsd:documentation>The BGP neighbors, if applicable.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="ospf_authentication_area" type="oval-def:EntityStateIntType" minOccurs="0" maxOccurs="unbounded">
                                          <xsd:annotation>
                                                <xsd:documentation>The OSPF area that is authenticated, if applicable.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="router_config_lines" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>The value returned with all config lines of the router instance.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                              </xsd:sequence>
                        </xsd:extension>
                  </xsd:complexContent>
            </xsd:complexType>
      </xsd:element>
      <!-- =============================================================================== -->
      <!-- =====================  END OF ROUTER TEST/OBJECT/STATE ======================== -->
      <!-- =============================================================================== -->
      <!-- =============================================================================== -->
      <!-- =====================  BGP NEIGHBOR TEST/OBJECT/STATE ========================= -->
      <!-- =============================================================================== -->
	  <xsd:element name="bgp_neighbor_test" substitutionGroup="oval-def:test">
            <xsd:annotation>
                  <xsd:documentation>The bgp_neighbor test is used to check the bgp neighbpr properties of bgp instances instances in IOS.</xsd:documentation>
                  <xsd:appinfo>
                        <oval:element_mapping>
                              <oval:test>bgp_neighbor_test</oval:test>
                              <oval:object>bgp_neighbor_object</oval:object>
                              <oval:state>bgp_neighbor_state</oval:state>
                              <oval:item target_namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#x-ios-routing">bgp_neighbor_item</oval:item>
                        </oval:element_mapping>
                  </xsd:appinfo>
                  <xsd:appinfo>
                        <sch:pattern id="x-ios-routing_bgp_neighbortst">
                              <sch:rule context="x-ios-routing:bgp_neighbor_test/x-ios-routing:object">
                                    <sch:assert test="@object_ref=ancestor::oval-def:oval_definitions/oval-def:objects/x-ios-routing:bgp_neighbor_object/@id"><sch:value-of select="../@id"/> - the object child element of a bgp_neighbor_test must reference a bgp_neighbor_object</sch:assert>
                              </sch:rule>
                              <sch:rule context="x-ios-routing:bgp_neighbor_test/x-ios-routing:state">
                                    <sch:assert test="@state_ref=ancestor::oval-def:oval_definitions/oval-def:states/x-ios-routing:bgp_neighbor_state/@id"><sch:value-of select="../@id"/> - the state child element of a bgp_neighbor_test must reference a bgp_neighbor_state</sch:assert>
                              </sch:rule>
                        </sch:pattern>
                  </xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
                  <xsd:complexContent>
                        <xsd:extension base="oval-def:TestType">
                              <xsd:sequence>
                                    <xsd:element name="object" type="oval-def:ObjectRefType"/>
                                    <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
                              </xsd:sequence>
                        </xsd:extension>
                  </xsd:complexContent>
            </xsd:complexType>
      </xsd:element>
      <xsd:element name="bgp_neighbor_object" substitutionGroup="oval-def:object">
            <xsd:annotation>
                  <xsd:documentation>The bgp_neighbor_object element is used by a bgp_neighbor test to define the object to be evaluated. Each object extends the standard ObjectType as defined in the oval-definitions-schema and one should refer to the ObjectType description for more information. The common set element allows complex objects to be created using filters and set logic. Again, please refer to the description of the set element in the oval-definitions-schema.</xsd:documentation>
                  <xsd:documentation>A bgp_neighbor object consists of a neighbor entity.</xsd:documentation>
                  <xsd:appinfo>
                        <sch:pattern id="x-ios-routing_bgp_neighbor_object_verify_filter_state">
                              <sch:rule context="x-ios-routing:bgp_neighbor_object//oval-def:filter">
                                    <sch:let name="parent_object" value="ancestor::x-ios-routing:bgp_neighbor_object"/>
                                    <sch:let name="parent_object_id" value="$parent_object/@id"/>
                                    <sch:let name="state_ref" value="."/>
                                    <sch:let name="reffed_state" value="ancestor::oval-def:oval_definitions/oval-def:states/*[@id=$state_ref]"/>
                                    <sch:let name="state_name" value="local-name($reffed_state)"/>
                                    <sch:let name="state_namespace" value="namespace-uri($reffed_state)"/>
                                    <sch:assert test="(($state_namespace='http://oval.mitre.org/XMLSchema/oval-definitions-5#x-ios-routing') and ($state_name='bgp_neighbor_state'))">State referenced in filter for <sch:value-of select="name($parent_object)"/> '<sch:value-of select="$parent_object_id"/>' is of the wrong type.</sch:assert>
                              </sch:rule>
                        </sch:pattern>
                  </xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
                  <xsd:complexContent>
                        <xsd:extension base="oval-def:ObjectType">
                              <xsd:sequence>
                                    <xsd:choice>
                                          <xsd:element ref="oval-def:set"/>
                                          <xsd:sequence>
                                                <xsd:element name="neighbor" type="oval-def:EntityObjectStringType">
                                                      <xsd:annotation>
                                                            <xsd:documentation>The bgp neighbor.</xsd:documentation>
                                                      </xsd:annotation>
                                                </xsd:element>
                                                <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                                          </xsd:sequence>
                                    </xsd:choice>
                              </xsd:sequence>
                        </xsd:extension>
                  </xsd:complexContent>
            </xsd:complexType>
      </xsd:element>
      <xsd:element name="bgp_neighbor_state" substitutionGroup="oval-def:state">
            <xsd:annotation>
                  <xsd:documentation>The bgp_neighbor_state element defines the different information that can be used to evaluate the result of a bgp neighbor configuration. This includes the neighbor and the password option, if configured. Please refer to the individual elements in the schema for more details about what each represents.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
                  <xsd:complexContent>
                        <xsd:extension base="oval-def:StateType">
                              <xsd:sequence>
				    <xsd:element name="neighbor" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>The bgp neighbor.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="password" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>The bgp authentication password, if configured. if Encryption type is configured it should be included in the password string. For example '0 cisco123'. </xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                              </xsd:sequence>
                        </xsd:extension>
                  </xsd:complexContent>
            </xsd:complexType>
      </xsd:element>
      <!-- =============================================================================== -->
      <!-- ====================  END OF BGP NEIGHBOR TEST/OBJECT/STATE =================== -->
      <!-- =============================================================================== -->
      <!-- =============================================================================== -->
      <!-- =========  ROUTING PROTOCOL AUTHENTICATION INTERFACE TEST/OBJECT/STATE ======== -->
      <!-- =============================================================================== -->
      <xsd:element name="routing_protocol_auth_intf_test" substitutionGroup="oval-def:test">
            <xsd:annotation>
                  <xsd:documentation>The routing protocol autnentication interface test is used to check the properties of routing protocol authentication configured under interfaces in IOS.</xsd:documentation>
                  <xsd:appinfo>
                        <oval:element_mapping>
                              <oval:test>routing_protocol_auth_intf_test</oval:test>
                              <oval:object>routing_protocol_auth_intf_object</oval:object>
                              <oval:state>routing_protocol_auth_intf_state</oval:state>
                              <oval:item target_namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#x-ios-routing">routing_protocol_auth_intf_item</oval:item>
                        </oval:element_mapping>
                  </xsd:appinfo>
                  <xsd:appinfo>
                        <sch:pattern id="x-ios-routing_routing_protocol_auth_intftst">
                              <sch:rule context="x-ios-routing:routing_protocol_auth_intf_test/x-ios-routing:object">
                                    <sch:assert test="@object_ref=ancestor::oval-def:oval_definitions/oval-def:objects/x-ios-routing:routing_protocol_auth_intf_object/@id"><sch:value-of select="../@id"/> - the object child element of a routing_protocol_auth_intf_test must reference a routing_protocol_auth_intf_object</sch:assert>
                              </sch:rule>
                              <sch:rule context="x-ios-routing:routing_protocol_auth_intf_test/x-ios-routing:state">
                                    <sch:assert test="@state_ref=ancestor::oval-def:oval_definitions/oval-def:states/x-ios-routing:routing_protocol_auth_intf_state/@id"><sch:value-of select="../@id"/> - the state child element of a routing_protocol_auth_intf_test must reference a routing_protocol_auth_intf_state</sch:assert>
                              </sch:rule>
                        </sch:pattern>
                  </xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
                  <xsd:complexContent>
                        <xsd:extension base="oval-def:TestType">
                              <xsd:sequence>
                                    <xsd:element name="object" type="oval-def:ObjectRefType"/>
                                    <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
                              </xsd:sequence>
                        </xsd:extension>
                  </xsd:complexContent>
            </xsd:complexType>
      </xsd:element>
      <xsd:element name="routing_protocol_auth_intf_object" substitutionGroup="oval-def:object">
            <xsd:annotation>
                  <xsd:documentation>The routing_protocol_auth_intf_object element is used by a routing_protocol_auth_intf test to define the object to be evaluated. Each object extends the standard ObjectType as defined in the oval-definitions-schema and one should refer to the ObjectType description for more information. The common set element allows complex objects to be created using filters and set logic. Again, please refer to the description of the set element in the oval-definitions-schema.</xsd:documentation>
                  <xsd:documentation>A routing_protocol_auth_intf object consists of an interface and the routing protocol that is authenticated entity.</xsd:documentation>
                  <xsd:appinfo>
                        <sch:pattern id="x-ios-routing_routing_protocol_auth_intf_object_verify_filter_state">
                              <sch:rule context="x-ios-routing:routing_protocol_auth_intf_object//oval-def:filter">
                                    <sch:let name="parent_object" value="ancestor::x-ios-routing:routing_protocol_auth_intf_object"/>
                                    <sch:let name="parent_object_id" value="$parent_object/@id"/>
                                    <sch:let name="state_ref" value="."/>
                                    <sch:let name="reffed_state" value="ancestor::oval-def:oval_definitions/oval-def:states/*[@id=$state_ref]"/>
                                    <sch:let name="state_name" value="local-name($reffed_state)"/>
                                    <sch:let name="state_namespace" value="namespace-uri($reffed_state)"/>
                                    <sch:assert test="(($state_namespace='http://oval.mitre.org/XMLSchema/oval-definitions-5#x-ios-routing') and ($state_name='routing_protocol_auth_intf_state'))">State referenced in filter for <sch:value-of select="name($parent_object)"/> '<sch:value-of select="$parent_object_id"/>' is of the wrong type.</sch:assert>
                              </sch:rule>
                        </sch:pattern>
                  </xsd:appinfo>
            </xsd:annotation>
            <xsd:complexType>
                  <xsd:complexContent>
                        <xsd:extension base="oval-def:ObjectType">
                              <xsd:sequence>
                                    <xsd:choice>
                                          <xsd:element ref="oval-def:set"/>
                                          <xsd:sequence>
                                                <xsd:element name="interface" type="oval-def:EntityObjectStringType">
                                                      <xsd:annotation>
                                                            <xsd:documentation>The interface</xsd:documentation>
                                                      </xsd:annotation>
                                                </xsd:element>
                                                <xsd:element name="protocol" type="x-ios-routing:EntityObjectRoutingProtocolType">
                                                      <xsd:annotation>
                                                            <xsd:documentation>The routing protocol</xsd:documentation>
                                                      </xsd:annotation>
                                                </xsd:element>
                                                <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                                          </xsd:sequence>
                                    </xsd:choice>
                              </xsd:sequence>
                        </xsd:extension>
                  </xsd:complexContent>
            </xsd:complexType>
      </xsd:element>
      <xsd:element name="routing_protocol_auth_intf_state" substitutionGroup="oval-def:state">
            <xsd:annotation>
                  <xsd:documentation>The routing_protocol_auth_intf_state element defines the different information that can be used to evaluate the result of a specific routing protocol interface authentication configurations. This includes the interface, the protocol, the id, the authentication type, the ospf area, the key chain command and the corresponding config lines. Please refer to the individual elements in the schema for more details about what each represents.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
                  <xsd:complexContent>
                        <xsd:extension base="oval-def:StateType">
                              <xsd:sequence>
                                    <xsd:element name="interface" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>The interface</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="protocol" type="x-ios-routing:EntityStateRoutingProtocolType" minOccurs="0" maxOccurs="unbounded">
                                          <xsd:annotation>
                                                <xsd:documentation>The routing protocol</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="id" type="oval-def:EntityStateIntType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>The routing protocol id, if applicable</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="auth_type" type="x-ios-routing:EntityStateRoutingAuthTypeStringType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>The routing protocol authentication type.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="ospf_area" type="oval-def:EntityStateIntType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>The OSPF area that is authenticated, if applicable.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                   <xsd:element name="key_chain" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>The name of the key chain, if applicable.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                              </xsd:sequence>
                        </xsd:extension>
                  </xsd:complexContent>
            </xsd:complexType>
      </xsd:element>
      <!-- =============================================================================== -->
      <!-- =====  END OF ROUTING PROTOCOL AUTHENTICATION INTERFACE TEST/OBJECT/STATE ===== -->
      <!-- =============================================================================== -->

      <!-- =============================================================================== -->
      <!-- ===========================  ROUTING OBJECT TYPES  ============================= -->
      <!-- =============================================================================== -->
      <xsd:complexType name="EntityObjectRoutingProtocolType">
            <xsd:annotation>
                  <xsd:documentation>The EntityObjectRoutingProtocolType complex type restricts a string value to a specific set of values: EIGRP, OSPF, BGP, RIP, RIPV2, ISIS. These values describe the routing protocol used in a Cisco IOS configuration.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleContent>
                  <xsd:restriction base="oval-def:EntityObjectStringType">
                        <xsd:enumeration value="EIGRP"/>
                        <xsd:enumeration value="OSPF"/>
                        <xsd:enumeration value="BGP"/>
                        <xsd:enumeration value="RIP"/>
                        <xsd:enumeration value="RIPV2"/>
                        <xsd:enumeration value="ISIS"/>
                  </xsd:restriction>
            </xsd:simpleContent>
      </xsd:complexType>
      <!-- =============================================================================== -->
      <!-- =========================  END OF ROUTING OBJECT TYPES  ======================= -->
      <!-- =============================================================================== -->

      <!-- =============================================================================== -->
      <!-- ===========================  ROUTING STATE TYPES  ============================= -->
      <!-- =============================================================================== -->
      <xsd:complexType name="EntityStateRoutingProtocolType">
            <xsd:annotation>
                  <xsd:documentation>The EntityStateRoutingProtocolType complex type restricts a string value to a specific set of values: EIGRP, OSPF, BGP, RIP, RIPV2, ISIS. These values describe the routing protocol used in a Cisco IOS configuration.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleContent>
                  <xsd:restriction base="oval-def:EntityStateStringType">
                        <xsd:enumeration value="EIGRP"/>
                        <xsd:enumeration value="OSPF"/>
                        <xsd:enumeration value="BGP"/>
                        <xsd:enumeration value="RIP"/>
                        <xsd:enumeration value="RIPV2"/>
                        <xsd:enumeration value="ISIS"/>
                  </xsd:restriction>
            </xsd:simpleContent>
      </xsd:complexType>
     <xsd:complexType name="EntityStateRoutingAuthTypeStringType">
          <xsd:annotation>
               <xsd:documentation>The EntityStateRoutingAuthTypeStringType complex type restricts a string value to a specific set of values: CLEARTEXT, MESSAGE_DIGEST, NULL. These values describe the routing protocol authentication types used in a Cisco IOS configuration.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
               <xsd:restriction base="oval-sc:EntityItemStringType">
                    <xsd:enumeration value="CLEARTEXT"/>
                    <xsd:enumeration value="MESSAGE_DIGEST"/>
                    <xsd:enumeration value="NULL"/>
               </xsd:restriction>
          </xsd:simpleContent>
     </xsd:complexType>
      <!-- =============================================================================== -->
      <!-- ==========================  END OF ROUTING STATE TYPES  ======================= -->
      <!-- =============================================================================== -->


      <!-- =============================================================================== -->
      <!-- ================================= ROUTER ITEM ================================= -->
      <!-- =============================================================================== -->
      <xsd:element name="router_item" substitutionGroup="oval-sc:item">
            <xsd:annotation>
                  <xsd:documentation>Stores commands that are part of a IOS 'router' command configuration. For example 'router bgp 123'.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
                  <xsd:complexContent>
                        <xsd:extension base="oval-sc:ItemType">
                              <xsd:sequence>
                                    <xsd:element name="protocol" type="x-ios-routing:EntityItemRoutingProtocolType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the routing protocol</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="id" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the IOS router id</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="network" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="unbounded">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the subnet in the network command of the router instance. The area can be included in the string for OSPF.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="bgp_neighbor" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="unbounded">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the BGP neighbors, if applicable.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="ospf_authentication_area" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="unbounded">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the OSPF area that is authenticated, if applicable.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                   <xsd:element name="router_config_lines" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with all config lines of the router.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                              </xsd:sequence>
                        </xsd:extension>
                  </xsd:complexContent>
            </xsd:complexType>
      </xsd:element>
      <!-- =============================================================================== -->
      <!-- ==========================  END OF ROUTER ITEM ================================ -->
      <!-- =============================================================================== -->
      <!-- =============================================================================== -->
      <!-- ============================== BGP NEIGHBOR ITEM ============================== -->
      <!-- =============================================================================== -->
      <xsd:element name="bgp_neighbor_item" substitutionGroup="oval-sc:item">
            <xsd:annotation>
                  <xsd:documentation>Stores information about bgp neighbors configured in bgp instances.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
                  <xsd:complexContent>
                        <xsd:extension base="oval-sc:ItemType">
                              <xsd:sequence>
                                    <xsd:element name="neighbor" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the bgp neighbor.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="password" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the bgp authentication password, if configured. IF Encryption type is configured it should be included in the password string. For example '0 cisco123'. </xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                              </xsd:sequence>
                        </xsd:extension>
                  </xsd:complexContent>
            </xsd:complexType>
      </xsd:element>
      <!-- =============================================================================== -->
      <!-- =======================  END OF BGP NEIGHBOR ITEM ============================= -->
      <!-- =============================================================================== -->
      <!-- =============================================================================== -->
      <!-- ================ ROUTING PROTOCOL AUTHENTICATION INTERFACE ITEM =============== -->
      <!-- =============================================================================== -->
      <xsd:element name="routing_protocol_auth_intf_item" substitutionGroup="oval-sc:item">
            <xsd:annotation>
                  <xsd:documentation>Stores information for routing protocol authentication configured under specific interfaces.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
                  <xsd:complexContent>
                        <xsd:extension base="oval-sc:ItemType">
                              <xsd:sequence>
                                    <xsd:element name="interface" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the interface.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="protocol" type="x-ios-routing:EntityItemRoutingProtocolType" minOccurs="0" maxOccurs="unbounded">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the routing protocol.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="id" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the routing protocol id.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="auth_type" type="x-ios-routing:EntityItemRoutingAuthTypeStringType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the routing protocol authentication type.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                    <xsd:element name="ospf_area" type="oval-sc:EntityItemIntType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the OSPF area that is authenticated, if applicable.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                                   <xsd:element name="key_chain" type="oval-sc:EntityItemStringType" minOccurs="0" maxOccurs="1">
                                          <xsd:annotation>
                                                <xsd:documentation>Element with the name of the key chain, if applicable.</xsd:documentation>
                                          </xsd:annotation>
                                    </xsd:element>
                              </xsd:sequence>
                        </xsd:extension>
                  </xsd:complexContent>
            </xsd:complexType>
      </xsd:element>
      <!-- =============================================================================== -->
      <!-- ============  END OF ROUTING PROTOCOL AUTHENTICATION INTERFACE ITEM =========== -->
      <!-- =============================================================================== -->

      <!-- =============================================================================== -->
      <!-- ============================  ROUTING ITEM TYPES  ============================= -->
      <!-- =============================================================================== -->
     <xsd:complexType name="EntityItemRoutingProtocolType">
          <xsd:annotation>
               <xsd:documentation>The EntityItemRoutingProtocolType complex type restricts a string value to a specific set of values: EIGRP, OSPF, BGP, RIP, RIPV2, ISIS. These values describe the routing protocol used in a Cisco IOS configuration.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
               <xsd:restriction base="oval-sc:EntityItemStringType">
                    <xsd:enumeration value="EIGRP"/>
                    <xsd:enumeration value="OSPF"/>
                    <xsd:enumeration value="BGP"/>
                    <xsd:enumeration value="RIP"/>
                    <xsd:enumeration value="RIPV2"/>
                    <xsd:enumeration value="ISIS"/>
               </xsd:restriction>
          </xsd:simpleContent>
     </xsd:complexType>
     <xsd:complexType name="EntityItemRoutingAuthTypeStringType">
          <xsd:annotation>
               <xsd:documentation>The EntityItemRoutingAuthTypeStringType complex type restricts a string value to a specific set of values: CLEARTEXT, MESSAGE_DIGEST, NULL. These values describe the routing protocol authentication types used in a Cisco IOS configuration.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleContent>
               <xsd:restriction base="oval-sc:EntityItemStringType">
                    <xsd:enumeration value="CLEARTEXT"/>
                    <xsd:enumeration value="MESSAGE_DIGEST"/>
                    <xsd:enumeration value="NULL"/>
               </xsd:restriction>
          </xsd:simpleContent>
     </xsd:complexType>
      <!-- =============================================================================== -->
      <!-- ========================  END OF ROUTING ITEM TYPES  ========================== -->
      <!-- =============================================================================== -->


</xsd:schema>
